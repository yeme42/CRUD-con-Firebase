{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Output, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { AngleUpIcon } from 'primeng/icons/angleup';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\nconst _c0 = [\"input\"];\nfunction InputNumber_ng_container_3_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 8);\n    i0.ɵɵlistener(\"click\", function InputNumber_ng_container_3_TimesIcon_1_Template_TimesIcon_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"p-inputnumber-clear-icon\");\n  }\n}\nfunction InputNumber_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, InputNumber_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵlistener(\"click\", function InputNumber_ng_container_3_span_2_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.clear());\n    });\n    i0.ɵɵtemplate(1, InputNumber_ng_container_3_span_2_1_Template, 1, 0, null, 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.clearIconTemplate);\n  }\n}\nfunction InputNumber_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputNumber_ng_container_3_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 6);\n    i0.ɵɵtemplate(2, InputNumber_ng_container_3_span_2_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.clearIconTemplate);\n  }\n}\nfunction InputNumber_span_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.incrementButtonIcon);\n  }\n}\nfunction InputNumber_span_4_ng_container_3_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleUpIcon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_span_4_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, InputNumber_span_4_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_span_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputNumber_span_4_ng_container_3_AngleUpIcon_1_Template, 1, 0, \"AngleUpIcon\", 3);\n    i0.ɵɵtemplate(2, InputNumber_span_4_ng_container_3_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r14.incrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r14.incrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_span_4_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r15.decrementButtonIcon);\n  }\n}\nfunction InputNumber_span_4_ng_container_6_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\");\n  }\n}\nfunction InputNumber_span_4_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_span_4_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, InputNumber_span_4_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_span_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputNumber_span_4_ng_container_6_AngleDownIcon_1_Template, 1, 0, \"AngleDownIcon\", 3);\n    i0.ɵɵtemplate(2, InputNumber_span_4_ng_container_6_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.decrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.decrementButtonIconTemplate);\n  }\n}\nconst _c1 = function () {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-up\": true\n  };\n};\nconst _c2 = function () {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-down\": true\n  };\n};\nfunction InputNumber_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.onUpButtonKeyUp());\n    });\n    i0.ɵɵtemplate(2, InputNumber_span_4_span_2_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(3, InputNumber_span_4_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_span_4_Template_button_mousedown_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_span_4_Template_button_mouseup_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_span_4_Template_button_mouseleave_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_span_4_Template_button_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_span_4_Template_button_keyup_4_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.onDownButtonKeyUp());\n    });\n    i0.ɵɵtemplate(5, InputNumber_span_4_span_5_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(6, InputNumber_span_4_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c1))(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r2.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(13, _c2))(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.decrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.decrementButtonIcon);\n  }\n}\nfunction InputNumber_button_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r34.incrementButtonIcon);\n  }\n}\nfunction InputNumber_button_5_ng_container_2_AngleUpIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleUpIcon\");\n  }\n}\nfunction InputNumber_button_5_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_button_5_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, InputNumber_button_5_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_button_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputNumber_button_5_ng_container_2_AngleUpIcon_1_Template, 1, 0, \"AngleUpIcon\", 3);\n    i0.ɵɵtemplate(2, InputNumber_button_5_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r35 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r35.incrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r35.incrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_button_5_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onUpButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_5_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onUpButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_5_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onUpButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_5_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.onUpButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_5_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.onUpButtonKeyUp());\n    });\n    i0.ɵɵtemplate(1, InputNumber_button_5_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(2, InputNumber_button_5_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.incrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(6, _c1))(\"disabled\", ctx_r3.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.incrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.incrementButtonIcon);\n  }\n}\nfunction InputNumber_button_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r45.decrementButtonIcon);\n  }\n}\nfunction InputNumber_button_6_ng_container_2_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\");\n  }\n}\nfunction InputNumber_button_6_ng_container_2_2_ng_template_0_Template(rf, ctx) {}\nfunction InputNumber_button_6_ng_container_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, InputNumber_button_6_ng_container_2_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction InputNumber_button_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, InputNumber_button_6_ng_container_2_AngleDownIcon_1_Template, 1, 0, \"AngleDownIcon\", 3);\n    i0.ɵɵtemplate(2, InputNumber_button_6_ng_container_2_2_Template, 1, 0, null, 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r46.decrementButtonIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r46.decrementButtonIconTemplate);\n  }\n}\nfunction InputNumber_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"mousedown\", function InputNumber_button_6_Template_button_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.onDownButtonMouseDown($event));\n    })(\"mouseup\", function InputNumber_button_6_Template_button_mouseup_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.onDownButtonMouseUp());\n    })(\"mouseleave\", function InputNumber_button_6_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.onDownButtonMouseLeave());\n    })(\"keydown\", function InputNumber_button_6_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onDownButtonKeyDown($event));\n    })(\"keyup\", function InputNumber_button_6_Template_button_keyup_0_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r55 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r55.onDownButtonKeyUp());\n    });\n    i0.ɵɵtemplate(1, InputNumber_button_6_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵtemplate(2, InputNumber_button_6_ng_container_2_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.decrementButtonClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(6, _c2))(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.decrementButtonIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.decrementButtonIcon);\n  }\n}\nconst _c3 = function (a1, a2, a3) {\n  return {\n    \"p-inputnumber p-component\": true,\n    \"p-inputnumber-buttons-stacked\": a1,\n    \"p-inputnumber-buttons-horizontal\": a2,\n    \"p-inputnumber-buttons-vertical\": a3\n  };\n};\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputNumber),\n  multi: true\n};\nclass InputNumber {\n  constructor(document, el, cd) {\n    this.document = document;\n    this.el = el;\n    this.cd = cd;\n    this.showButtons = false;\n    this.format = true;\n    this.buttonLayout = 'stacked';\n    this.readonly = false;\n    this.step = 1;\n    this.allowEmpty = true;\n    this.mode = 'decimal';\n    this.useGrouping = true;\n    this.showClear = false;\n    this.onInput = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onKeyDown = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onModelChange = () => {};\n    this.onModelTouched = () => {};\n    this.groupChar = '';\n    this.prefixChar = '';\n    this.suffixChar = '';\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    if (disabled) this.focused = false;\n    this._disabled = disabled;\n    if (this.timer) this.clearTimer();\n  }\n  ngOnChanges(simpleChange) {\n    const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n    if (props.some(p => !!simpleChange[p])) {\n      this.updateConstructParser();\n    }\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'clearicon':\n          this.clearIconTemplate = item.template;\n          break;\n        case 'incrementbuttonicon':\n          this.incrementButtonIconTemplate = item.template;\n          break;\n        case 'decrementbuttonicon':\n          this.decrementButtonIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnInit() {\n    this.constructParser();\n    this.initialized = true;\n  }\n  getOptions() {\n    return {\n      localeMatcher: this.localeMatcher,\n      style: this.mode,\n      currency: this.currency,\n      currencyDisplay: this.currencyDisplay,\n      useGrouping: this.useGrouping,\n      minimumFractionDigits: this.minFractionDigits,\n      maximumFractionDigits: this.maxFractionDigits\n    };\n  }\n  constructParser() {\n    this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n    const numerals = [...new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    }).format(9876543210)].reverse();\n    const index = new Map(numerals.map((d, i) => [d, i]));\n    this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n    this._group = this.getGroupingExpression();\n    this._minusSign = this.getMinusSignExpression();\n    this._currency = this.getCurrencyExpression();\n    this._decimal = this.getDecimalExpression();\n    this._suffix = this.getSuffixExpression();\n    this._prefix = this.getPrefixExpression();\n    this._index = d => index.get(d);\n  }\n  updateConstructParser() {\n    if (this.initialized) {\n      this.constructParser();\n    }\n  }\n  escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  getDecimalExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      ...this.getOptions(),\n      useGrouping: false\n    });\n    return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g');\n  }\n  getGroupingExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: true\n    });\n    this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n    return new RegExp(`[${this.groupChar}]`, 'g');\n  }\n  getMinusSignExpression() {\n    const formatter = new Intl.NumberFormat(this.locale, {\n      useGrouping: false\n    });\n    return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n  }\n  getCurrencyExpression() {\n    if (this.currency) {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: 'currency',\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n    }\n    return new RegExp(`[]`, 'g');\n  }\n  getPrefixExpression() {\n    if (this.prefix) {\n      this.prefixChar = this.prefix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay\n      });\n      this.prefixChar = formatter.format(1).split('1')[0];\n    }\n    return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n  }\n  getSuffixExpression() {\n    if (this.suffix) {\n      this.suffixChar = this.suffix;\n    } else {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      });\n      this.suffixChar = formatter.format(1).split('1')[1];\n    }\n    return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n  }\n  formatValue(value) {\n    if (value != null) {\n      if (value === '-') {\n        // Minus sign\n        return value;\n      }\n      if (this.format) {\n        let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n        let formattedValue = formatter.format(value);\n        if (this.prefix) {\n          formattedValue = this.prefix + formattedValue;\n        }\n        if (this.suffix) {\n          formattedValue = formattedValue + this.suffix;\n        }\n        return formattedValue;\n      }\n      return value.toString();\n    }\n    return '';\n  }\n  parseValue(text) {\n    let filteredText = text.replace(this._suffix, '').replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '').replace(this._group, '').replace(this._minusSign, '-').replace(this._decimal, '.').replace(this._numeral, this._index);\n    if (filteredText) {\n      if (filteredText === '-')\n        // Minus sign\n        return filteredText;\n      let parsedValue = +filteredText;\n      return isNaN(parsedValue) ? null : parsedValue;\n    }\n    return null;\n  }\n  repeat(event, interval, dir) {\n    if (this.readonly) {\n      return;\n    }\n    let i = interval || 500;\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, 40, dir);\n    }, i);\n    this.spin(event, dir);\n  }\n  spin(event, dir) {\n    let step = this.step * dir;\n    let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n    let newValue = this.validateValue(currentValue + step);\n    if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n      return;\n    }\n    this.updateInput(newValue, null, 'spin', null);\n    this.updateModel(event, newValue);\n    this.handleOnInput(event, currentValue, newValue);\n  }\n  clear() {\n    this.value = null;\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n  onUpButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    this.input.nativeElement.focus();\n    this.repeat(event, null, 1);\n    event.preventDefault();\n  }\n  onUpButtonMouseUp() {\n    this.clearTimer();\n  }\n  onUpButtonMouseLeave() {\n    this.clearTimer();\n  }\n  onUpButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, 1);\n    }\n  }\n  onUpButtonKeyUp() {\n    this.clearTimer();\n  }\n  onDownButtonMouseDown(event) {\n    if (event.button === 2) {\n      this.clearTimer();\n      return;\n    }\n    this.input.nativeElement.focus();\n    this.repeat(event, null, -1);\n    event.preventDefault();\n  }\n  onDownButtonMouseUp() {\n    this.clearTimer();\n  }\n  onDownButtonMouseLeave() {\n    this.clearTimer();\n  }\n  onDownButtonKeyUp() {\n    this.clearTimer();\n  }\n  onDownButtonKeyDown(event) {\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.repeat(event, null, -1);\n    }\n  }\n  onUserInput(event) {\n    if (this.readonly) {\n      return;\n    }\n    if (this.isSpecialChar) {\n      event.target.value = this.lastValue;\n    }\n    this.isSpecialChar = false;\n  }\n  onInputKeyDown(event) {\n    if (this.readonly) {\n      return;\n    }\n    this.lastValue = event.target.value;\n    if (event.shiftKey || event.altKey) {\n      this.isSpecialChar = true;\n      return;\n    }\n    let selectionStart = event.target.selectionStart;\n    let selectionEnd = event.target.selectionEnd;\n    let inputValue = event.target.value;\n    let newValueStr = null;\n    if (event.altKey) {\n      event.preventDefault();\n    }\n    switch (event.which) {\n      //up\n      case 38:\n        this.spin(event, 1);\n        event.preventDefault();\n        break;\n      //down\n      case 40:\n        this.spin(event, -1);\n        event.preventDefault();\n        break;\n      //left\n      case 37:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n          event.preventDefault();\n        }\n        break;\n      //right\n      case 39:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n          event.preventDefault();\n        }\n        break;\n      //enter\n      case 13:\n        newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValueStr);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n        this.updateModel(event, newValueStr);\n        break;\n      //backspace\n      case 8:\n        {\n          event.preventDefault();\n          if (selectionStart === selectionEnd) {\n            const deleteChar = inputValue.charAt(selectionStart - 1);\n            const {\n              decimalCharIndex,\n              decimalCharIndexWithoutPrefix\n            } = this.getDecimalCharIndexes(inputValue);\n            if (this.isNumeralChar(deleteChar)) {\n              const decimalLength = this.getDecimalLength(inputValue);\n              if (this._group.test(deleteChar)) {\n                this._group.lastIndex = 0;\n                newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n              } else if (this._decimal.test(deleteChar)) {\n                this._decimal.lastIndex = 0;\n                if (decimalLength) {\n                  this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                }\n              } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n              } else if (decimalCharIndexWithoutPrefix === 1) {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n              }\n            }\n            this.updateValue(event, newValueStr, null, 'delete-single');\n          } else {\n            newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n            this.updateValue(event, newValueStr, null, 'delete-range');\n          }\n          break;\n        }\n      // del\n      case 46:\n        event.preventDefault();\n        if (selectionStart === selectionEnd) {\n          const deleteChar = inputValue.charAt(selectionStart);\n          const {\n            decimalCharIndex,\n            decimalCharIndexWithoutPrefix\n          } = this.getDecimalCharIndexes(inputValue);\n          if (this.isNumeralChar(deleteChar)) {\n            const decimalLength = this.getDecimalLength(inputValue);\n            if (this._group.test(deleteChar)) {\n              this._group.lastIndex = 0;\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n            } else if (this._decimal.test(deleteChar)) {\n              this._decimal.lastIndex = 0;\n              if (decimalLength) {\n                this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n              }\n            } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n              const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n              newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n            } else if (decimalCharIndexWithoutPrefix === 1) {\n              newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n              newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n            } else {\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n            }\n          }\n          this.updateValue(event, newValueStr, null, 'delete-back-single');\n        } else {\n          newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, null, 'delete-range');\n        }\n        break;\n      default:\n        break;\n    }\n    this.onKeyDown.emit(event);\n  }\n  onInputKeyPress(event) {\n    if (this.readonly) {\n      return;\n    }\n    let code = event.which || event.keyCode;\n    let char = String.fromCharCode(code);\n    const isDecimalSign = this.isDecimalSign(char);\n    const isMinusSign = this.isMinusSign(char);\n    if (code != 13) {\n      event.preventDefault();\n    }\n    if (48 <= code && code <= 57 || isMinusSign || isDecimalSign) {\n      this.insert(event, char, {\n        isDecimalSign,\n        isMinusSign\n      });\n    }\n  }\n  onPaste(event) {\n    if (!this.disabled && !this.readonly) {\n      event.preventDefault();\n      let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\n      if (data) {\n        let filteredData = this.parseValue(data);\n        if (filteredData != null) {\n          this.insert(event, filteredData.toString());\n        }\n      }\n    }\n  }\n  allowMinusSign() {\n    return this.min == null || this.min < 0;\n  }\n  isMinusSign(char) {\n    if (this._minusSign.test(char) || char === '-') {\n      this._minusSign.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalSign(char) {\n    if (this._decimal.test(char)) {\n      this._decimal.lastIndex = 0;\n      return true;\n    }\n    return false;\n  }\n  isDecimalMode() {\n    return this.mode === 'decimal';\n  }\n  getDecimalCharIndexes(val) {\n    let decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n    const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      decimalCharIndexWithoutPrefix\n    };\n  }\n  getCharIndexes(val) {\n    const decimalCharIndex = val.search(this._decimal);\n    this._decimal.lastIndex = 0;\n    const minusCharIndex = val.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    const suffixCharIndex = val.search(this._suffix);\n    this._suffix.lastIndex = 0;\n    const currencyCharIndex = val.search(this._currency);\n    this._currency.lastIndex = 0;\n    return {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    };\n  }\n  insert(event, text, sign = {\n    isDecimalSign: false,\n    isMinusSign: false\n  }) {\n    const minusCharIndexOnText = text.search(this._minusSign);\n    this._minusSign.lastIndex = 0;\n    if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n      return;\n    }\n    let selectionStart = this.input.nativeElement.selectionStart;\n    let selectionEnd = this.input.nativeElement.selectionEnd;\n    let inputValue = this.input.nativeElement.value.trim();\n    const {\n      decimalCharIndex,\n      minusCharIndex,\n      suffixCharIndex,\n      currencyCharIndex\n    } = this.getCharIndexes(inputValue);\n    let newValueStr;\n    if (sign.isMinusSign) {\n      if (selectionStart === 0) {\n        newValueStr = inputValue;\n        if (minusCharIndex === -1 || selectionEnd !== 0) {\n          newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n        }\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else if (sign.isDecimalSign) {\n      if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n        this.updateValue(event, inputValue, text, 'insert');\n      } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      } else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, 'insert');\n      }\n    } else {\n      const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n      const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n      if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n        if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n          const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n          newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n          this.updateValue(event, newValueStr, text, operation);\n        }\n      } else {\n        newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n        this.updateValue(event, newValueStr, text, operation);\n      }\n    }\n  }\n  insertText(value, text, start, end) {\n    let textSplit = text === '.' ? text : text.split('.');\n    if (textSplit.length === 2) {\n      const decimalCharIndex = value.slice(start, end).search(this._decimal);\n      this._decimal.lastIndex = 0;\n      return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n    } else if (end - start === value.length) {\n      return this.formatValue(text);\n    } else if (start === 0) {\n      return text + value.slice(end);\n    } else if (end === value.length) {\n      return value.slice(0, start) + text;\n    } else {\n      return value.slice(0, start) + text + value.slice(end);\n    }\n  }\n  deleteRange(value, start, end) {\n    let newValueStr;\n    if (end - start === value.length) newValueStr = '';else if (start === 0) newValueStr = value.slice(end);else if (end === value.length) newValueStr = value.slice(0, start);else newValueStr = value.slice(0, start) + value.slice(end);\n    return newValueStr;\n  }\n  initCursor() {\n    let selectionStart = this.input.nativeElement.selectionStart;\n    let inputValue = this.input.nativeElement.value;\n    let valueLength = inputValue.length;\n    let index = null;\n    // remove prefix\n    let prefixLength = (this.prefixChar || '').length;\n    inputValue = inputValue.replace(this._prefix, '');\n    selectionStart = selectionStart - prefixLength;\n    let char = inputValue.charAt(selectionStart);\n    if (this.isNumeralChar(char)) {\n      return selectionStart + prefixLength;\n    }\n    //left\n    let i = selectionStart - 1;\n    while (i >= 0) {\n      char = inputValue.charAt(i);\n      if (this.isNumeralChar(char)) {\n        index = i + prefixLength;\n        break;\n      } else {\n        i--;\n      }\n    }\n    if (index !== null) {\n      this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n    } else {\n      i = selectionStart;\n      while (i < valueLength) {\n        char = inputValue.charAt(i);\n        if (this.isNumeralChar(char)) {\n          index = i + prefixLength;\n          break;\n        } else {\n          i++;\n        }\n      }\n      if (index !== null) {\n        this.input.nativeElement.setSelectionRange(index, index);\n      }\n    }\n    return index || 0;\n  }\n  onInputClick() {\n    const currentValue = this.input.nativeElement.value;\n    if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n      this.initCursor();\n    }\n  }\n  isNumeralChar(char) {\n    if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n      this.resetRegex();\n      return true;\n    }\n    return false;\n  }\n  resetRegex() {\n    this._numeral.lastIndex = 0;\n    this._decimal.lastIndex = 0;\n    this._group.lastIndex = 0;\n    this._minusSign.lastIndex = 0;\n  }\n  updateValue(event, valueStr, insertedValueStr, operation) {\n    let currentValue = this.input.nativeElement.value;\n    let newValue = null;\n    if (valueStr != null) {\n      newValue = this.parseValue(valueStr);\n      newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n      this.updateInput(newValue, insertedValueStr, operation, valueStr);\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }\n  handleOnInput(event, currentValue, newValue) {\n    if (this.isValueChanged(currentValue, newValue)) {\n      this.input.nativeElement.value = this.formatValue(newValue);\n      this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n      this.updateModel(event, newValue);\n      this.onInput.emit({\n        originalEvent: event,\n        value: newValue,\n        formattedValue: currentValue\n      });\n    }\n  }\n  isValueChanged(currentValue, newValue) {\n    if (newValue === null && currentValue !== null) {\n      return true;\n    }\n    if (newValue != null) {\n      let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n      return newValue !== parsedCurrentValue;\n    }\n    return false;\n  }\n  validateValue(value) {\n    if (value === '-' || value == null) {\n      return null;\n    }\n    if (this.min != null && value < this.min) {\n      return this.min;\n    }\n    if (this.max != null && value > this.max) {\n      return this.max;\n    }\n    return value;\n  }\n  updateInput(value, insertedValueStr, operation, valueStr) {\n    insertedValueStr = insertedValueStr || '';\n    let inputValue = this.input.nativeElement.value;\n    let newValue = this.formatValue(value);\n    let currentLength = inputValue.length;\n    if (newValue !== valueStr) {\n      newValue = this.concatValues(newValue, valueStr);\n    }\n    if (currentLength === 0) {\n      this.input.nativeElement.value = newValue;\n      this.input.nativeElement.setSelectionRange(0, 0);\n      const index = this.initCursor();\n      const selectionEnd = index + insertedValueStr.length;\n      this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n    } else {\n      let selectionStart = this.input.nativeElement.selectionStart;\n      let selectionEnd = this.input.nativeElement.selectionEnd;\n      if (this.maxlength && this.maxlength < newValue.length) {\n        return;\n      }\n      this.input.nativeElement.value = newValue;\n      let newLength = newValue.length;\n      if (operation === 'range-insert') {\n        const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n        const startValueStr = startValue !== null ? startValue.toString() : '';\n        const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n        const sRegex = new RegExp(startExpr, 'g');\n        sRegex.test(newValue);\n        const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n        const tRegex = new RegExp(tExpr, 'g');\n        tRegex.test(newValue.slice(sRegex.lastIndex));\n        selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (newLength === currentLength) {\n        if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (operation === 'delete-back-single') {\n        let prevChar = inputValue.charAt(selectionEnd - 1);\n        let nextChar = inputValue.charAt(selectionEnd);\n        let diff = currentLength - newLength;\n        let isGroupChar = this._group.test(nextChar);\n        if (isGroupChar && diff === 1) {\n          selectionEnd += 1;\n        } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n          selectionEnd += -1 * diff + 1;\n        }\n        this._group.lastIndex = 0;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else if (inputValue === '-' && operation === 'insert') {\n        this.input.nativeElement.setSelectionRange(0, 0);\n        const index = this.initCursor();\n        const selectionEnd = index + insertedValueStr.length + 1;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else {\n        selectionEnd = selectionEnd + (newLength - currentLength);\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      }\n    }\n    this.input.nativeElement.setAttribute('aria-valuenow', value);\n  }\n  concatValues(val1, val2) {\n    if (val1 && val2) {\n      let decimalCharIndex = val2.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      if (this.suffixChar) {\n        return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n      } else {\n        return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n      }\n    }\n    return val1;\n  }\n  getDecimalLength(value) {\n    if (value) {\n      const valueSplit = value.split(this._decimal);\n      if (valueSplit.length === 2) {\n        return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n      }\n    }\n    return 0;\n  }\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n    this.input.nativeElement.value = this.formatValue(newValue);\n    this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n    this.updateModel(event, newValue);\n    this.onBlur.emit(event);\n  }\n  formattedValue() {\n    const val = !this.value && !this.allowEmpty ? 0 : this.value;\n    return this.formatValue(val);\n  }\n  updateModel(event, value) {\n    if (this.value !== value) {\n      this.value = value;\n      this.onModelChange(value);\n    }\n    this.onModelTouched();\n  }\n  writeValue(value) {\n    this.value = value;\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  get filled() {\n    return this.value != null && this.value.toString().length > 0;\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n  getFormatter() {\n    return this.numberFormat;\n  }\n}\nInputNumber.ɵfac = function InputNumber_Factory(t) {\n  return new (t || InputNumber)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nInputNumber.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputNumber,\n  selectors: [[\"p-inputNumber\"]],\n  contentQueries: function InputNumber_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function InputNumber_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function InputNumber_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused)(\"p-inputnumber-clearable\", ctx.showClear && ctx.buttonLayout != \"vertical\");\n    }\n  },\n  inputs: {\n    showButtons: \"showButtons\",\n    format: \"format\",\n    buttonLayout: \"buttonLayout\",\n    inputId: \"inputId\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    placeholder: \"placeholder\",\n    size: \"size\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaRequired: \"ariaRequired\",\n    name: \"name\",\n    required: \"required\",\n    autocomplete: \"autocomplete\",\n    min: \"min\",\n    max: \"max\",\n    incrementButtonClass: \"incrementButtonClass\",\n    decrementButtonClass: \"decrementButtonClass\",\n    incrementButtonIcon: \"incrementButtonIcon\",\n    decrementButtonIcon: \"decrementButtonIcon\",\n    readonly: \"readonly\",\n    step: \"step\",\n    allowEmpty: \"allowEmpty\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    mode: \"mode\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    inputStyle: \"inputStyle\",\n    inputStyleClass: \"inputStyleClass\",\n    showClear: \"showClear\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onInput: \"onInput\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\",\n    onClear: \"onClear\"\n  },\n  features: [i0.ɵɵProvidersFeature([INPUTNUMBER_VALUE_ACCESSOR]), i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 32,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", \"inputmode\", \"decimal\", 3, \"ngClass\", \"ngStyle\", \"value\", \"disabled\", \"readonly\", \"input\", \"keydown\", \"keypress\", \"paste\", \"click\", \"focus\", \"blur\"], [\"input\", \"\"], [4, \"ngIf\"], [\"class\", \"p-inputnumber-button-group\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-button-icon-only\", \"tabindex\", \"-1\", 3, \"ngClass\", \"class\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", 4, \"ngIf\"], [3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-inputnumber-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [1, \"p-inputnumber-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [1, \"p-inputnumber-button-group\"], [\"type\", \"button\", \"pButton\", \"\", \"tabindex\", \"-1\", 1, \"p-button-icon-only\", 3, \"ngClass\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n  template: function InputNumber_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"input\", function InputNumber_Template_input_input_1_listener($event) {\n        return ctx.onUserInput($event);\n      })(\"keydown\", function InputNumber_Template_input_keydown_1_listener($event) {\n        return ctx.onInputKeyDown($event);\n      })(\"keypress\", function InputNumber_Template_input_keypress_1_listener($event) {\n        return ctx.onInputKeyPress($event);\n      })(\"paste\", function InputNumber_Template_input_paste_1_listener($event) {\n        return ctx.onPaste($event);\n      })(\"click\", function InputNumber_Template_input_click_1_listener() {\n        return ctx.onInputClick();\n      })(\"focus\", function InputNumber_Template_input_focus_1_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function InputNumber_Template_input_blur_1_listener($event) {\n        return ctx.onInputBlur($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, InputNumber_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, InputNumber_span_4_Template, 7, 14, \"span\", 4);\n      i0.ɵɵtemplate(5, InputNumber_button_5_Template, 3, 7, \"button\", 5);\n      i0.ɵɵtemplate(6, InputNumber_button_6_Template, 3, 7, \"button\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(28, _c3, ctx.showButtons && ctx.buttonLayout === \"stacked\", ctx.showButtons && ctx.buttonLayout === \"horizontal\", ctx.showButtons && ctx.buttonLayout === \"vertical\"))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMap(ctx.inputStyleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-inputnumber-input\")(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.formattedValue())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly);\n      i0.ɵɵattribute(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"id\", ctx.inputId)(\"size\", ctx.size)(\"name\", ctx.name)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.ariaLabel)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"min\", ctx.min)(\"max\", ctx.max);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonLayout != \"vertical\" && ctx.showClear && ctx.value);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout === \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n    }\n  },\n  dependencies: function () {\n    return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.InputText, i3.ButtonDirective, TimesIcon, AngleUpIcon, AngleDownIcon];\n  },\n  styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumber, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputNumber',\n      template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\"/>\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>            \n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n            <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n            <ng-container *ngIf=\"!decrementButtonIcon\">\n                <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n            </ng-container>\n        </button>\n        </span>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [INPUTNUMBER_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused',\n        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n      },\n      styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    showButtons: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    buttonLayout: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    incrementButtonClass: [{\n      type: Input\n    }],\n    decrementButtonClass: [{\n      type: Input\n    }],\n    incrementButtonIcon: [{\n      type: Input\n    }],\n    decrementButtonIcon: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    allowEmpty: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\nclass InputNumberModule {}\nInputNumberModule.ɵfac = function InputNumberModule_Factory(t) {\n  return new (t || InputNumberModule)();\n};\nInputNumberModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputNumberModule\n});\nInputNumberModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon, SharedModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n      exports: [InputNumber, SharedModule],\n      declarations: [InputNumber]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };\n//# sourceMappingURL=primeng-inputnumber.mjs.map","map":{"version":3,"names":["i1","DOCUMENT","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","ViewChild","Output","ContentChildren","NgModule","NG_VALUE_ACCESSOR","i3","ButtonModule","DomHandler","i2","InputTextModule","PrimeTemplate","SharedModule","TimesIcon","AngleUpIcon","AngleDownIcon","INPUTNUMBER_VALUE_ACCESSOR","provide","useExisting","InputNumber","multi","constructor","document","el","cd","showButtons","format","buttonLayout","readonly","step","allowEmpty","mode","useGrouping","showClear","onInput","onFocus","onBlur","onKeyDown","onClear","onModelChange","onModelTouched","groupChar","prefixChar","suffixChar","disabled","_disabled","focused","timer","clearTimer","ngOnChanges","simpleChange","props","some","p","updateConstructParser","ngAfterContentInit","templates","forEach","item","getType","clearIconTemplate","template","incrementButtonIconTemplate","decrementButtonIconTemplate","ngOnInit","constructParser","initialized","getOptions","localeMatcher","style","currency","currencyDisplay","minimumFractionDigits","minFractionDigits","maximumFractionDigits","maxFractionDigits","numberFormat","Intl","NumberFormat","locale","numerals","reverse","index","Map","map","d","i","_numeral","RegExp","join","_group","getGroupingExpression","_minusSign","getMinusSignExpression","_currency","getCurrencyExpression","_decimal","getDecimalExpression","_suffix","getSuffixExpression","_prefix","getPrefixExpression","_index","get","escapeRegExp","text","replace","formatter","trim","charAt","prefix","split","suffix","formatValue","value","formattedValue","toString","parseValue","filteredText","parsedValue","isNaN","repeat","event","interval","dir","setTimeout","spin","currentValue","input","nativeElement","newValue","validateValue","maxlength","length","updateInput","updateModel","handleOnInput","clear","emit","onUpButtonMouseDown","button","focus","preventDefault","onUpButtonMouseUp","onUpButtonMouseLeave","onUpButtonKeyDown","keyCode","onUpButtonKeyUp","onDownButtonMouseDown","onDownButtonMouseUp","onDownButtonMouseLeave","onDownButtonKeyUp","onDownButtonKeyDown","onUserInput","isSpecialChar","target","lastValue","onInputKeyDown","shiftKey","altKey","selectionStart","selectionEnd","inputValue","newValueStr","which","isNumeralChar","setAttribute","deleteChar","decimalCharIndex","decimalCharIndexWithoutPrefix","getDecimalCharIndexes","decimalLength","getDecimalLength","test","lastIndex","slice","setSelectionRange","insertedText","isDecimalMode","updateValue","deleteRange","onInputKeyPress","code","char","String","fromCharCode","isDecimalSign","isMinusSign","insert","onPaste","data","clipboardData","defaultView","getData","filteredData","allowMinusSign","min","val","search","filteredVal","getCharIndexes","minusCharIndex","suffixCharIndex","currencyCharIndex","sign","minusCharIndexOnText","insertText","resolvedOptions","operation","charIndex","start","end","textSplit","initCursor","valueLength","prefixLength","onInputClick","getSelection","resetRegex","valueStr","insertedValueStr","isValueChanged","originalEvent","parsedCurrentValue","max","currentLength","concatValues","newLength","startValue","startValueStr","startExpr","sRegex","tExpr","tRegex","prevChar","nextChar","diff","isGroupChar","val1","val2","valueSplit","onInputFocus","onInputBlur","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","filled","clearInterval","getFormatter","ɵfac","ElementRef","ChangeDetectorRef","ɵcmp","NgClass","NgIf","NgTemplateOutlet","NgStyle","InputText","ButtonDirective","type","args","selector","changeDetection","OnPush","providers","encapsulation","None","host","class","styles","Document","decorators","inputId","styleClass","placeholder","size","tabindex","title","ariaLabel","ariaRequired","name","required","autocomplete","incrementButtonClass","decrementButtonClass","incrementButtonIcon","decrementButtonIcon","inputStyle","inputStyleClass","InputNumberModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/YEME-HP/Desktop/heroesApp/HeroesApp/node_modules/primeng/fesm2020/primeng-inputnumber.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ViewChild, Output, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport * as i2 from 'primeng/inputtext';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { AngleUpIcon } from 'primeng/icons/angleup';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\n\nconst INPUTNUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputNumber),\n    multi: true\n};\nclass InputNumber {\n    constructor(document, el, cd) {\n        this.document = document;\n        this.el = el;\n        this.cd = cd;\n        this.showButtons = false;\n        this.format = true;\n        this.buttonLayout = 'stacked';\n        this.readonly = false;\n        this.step = 1;\n        this.allowEmpty = true;\n        this.mode = 'decimal';\n        this.useGrouping = true;\n        this.showClear = false;\n        this.onInput = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.groupChar = '';\n        this.prefixChar = '';\n        this.suffixChar = '';\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        if (disabled)\n            this.focused = false;\n        this._disabled = disabled;\n        if (this.timer)\n            this.clearTimer();\n    }\n    ngOnChanges(simpleChange) {\n        const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\n        if (props.some((p) => !!simpleChange[p])) {\n            this.updateConstructParser();\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'clearicon':\n                    this.clearIconTemplate = item.template;\n                    break;\n                case 'incrementbuttonicon':\n                    this.incrementButtonIconTemplate = item.template;\n                    break;\n                case 'decrementbuttonicon':\n                    this.decrementButtonIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnInit() {\n        this.constructParser();\n        this.initialized = true;\n    }\n    getOptions() {\n        return {\n            localeMatcher: this.localeMatcher,\n            style: this.mode,\n            currency: this.currency,\n            currencyDisplay: this.currencyDisplay,\n            useGrouping: this.useGrouping,\n            minimumFractionDigits: this.minFractionDigits,\n            maximumFractionDigits: this.maxFractionDigits\n        };\n    }\n    constructParser() {\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n        const numerals = [...new Intl.NumberFormat(this.locale, { useGrouping: false }).format(9876543210)].reverse();\n        const index = new Map(numerals.map((d, i) => [d, i]));\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n        this._group = this.getGroupingExpression();\n        this._minusSign = this.getMinusSignExpression();\n        this._currency = this.getCurrencyExpression();\n        this._decimal = this.getDecimalExpression();\n        this._suffix = this.getSuffixExpression();\n        this._prefix = this.getPrefixExpression();\n        this._index = (d) => index.get(d);\n    }\n    updateConstructParser() {\n        if (this.initialized) {\n            this.constructParser();\n        }\n    }\n    escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n    getDecimalExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { ...this.getOptions(), useGrouping: false });\n        return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g');\n    }\n    getGroupingExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: true });\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n        return new RegExp(`[${this.groupChar}]`, 'g');\n    }\n    getMinusSignExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: false });\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n    }\n    getCurrencyExpression() {\n        if (this.currency) {\n            const formatter = new Intl.NumberFormat(this.locale, { style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\n        }\n        return new RegExp(`[]`, 'g');\n    }\n    getPrefixExpression() {\n        if (this.prefix) {\n            this.prefixChar = this.prefix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay });\n            this.prefixChar = formatter.format(1).split('1')[0];\n        }\n        return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\n    }\n    getSuffixExpression() {\n        if (this.suffix) {\n            this.suffixChar = this.suffix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\n            this.suffixChar = formatter.format(1).split('1')[1];\n        }\n        return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\n    }\n    formatValue(value) {\n        if (value != null) {\n            if (value === '-') {\n                // Minus sign\n                return value;\n            }\n            if (this.format) {\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n                let formattedValue = formatter.format(value);\n                if (this.prefix) {\n                    formattedValue = this.prefix + formattedValue;\n                }\n                if (this.suffix) {\n                    formattedValue = formattedValue + this.suffix;\n                }\n                return formattedValue;\n            }\n            return value.toString();\n        }\n        return '';\n    }\n    parseValue(text) {\n        let filteredText = text\n            .replace(this._suffix, '')\n            .replace(this._prefix, '')\n            .trim()\n            .replace(/\\s/g, '')\n            .replace(this._currency, '')\n            .replace(this._group, '')\n            .replace(this._minusSign, '-')\n            .replace(this._decimal, '.')\n            .replace(this._numeral, this._index);\n        if (filteredText) {\n            if (filteredText === '-')\n                // Minus sign\n                return filteredText;\n            let parsedValue = +filteredText;\n            return isNaN(parsedValue) ? null : parsedValue;\n        }\n        return null;\n    }\n    repeat(event, interval, dir) {\n        if (this.readonly) {\n            return;\n        }\n        let i = interval || 500;\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n        this.spin(event, dir);\n    }\n    spin(event, dir) {\n        let step = this.step * dir;\n        let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n        let newValue = this.validateValue(currentValue + step);\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n            return;\n        }\n        this.updateInput(newValue, null, 'spin', null);\n        this.updateModel(event, newValue);\n        this.handleOnInput(event, currentValue, newValue);\n    }\n    clear() {\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onUpButtonMouseDown(event) {\n        if (event.button === 2) {\n            this.clearTimer();\n            return;\n        }\n        this.input.nativeElement.focus();\n        this.repeat(event, null, 1);\n        event.preventDefault();\n    }\n    onUpButtonMouseUp() {\n        this.clearTimer();\n    }\n    onUpButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onUpButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, 1);\n        }\n    }\n    onUpButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseDown(event) {\n        if (event.button === 2) {\n            this.clearTimer();\n            return;\n        }\n        this.input.nativeElement.focus();\n        this.repeat(event, null, -1);\n        event.preventDefault();\n    }\n    onDownButtonMouseUp() {\n        this.clearTimer();\n    }\n    onDownButtonMouseLeave() {\n        this.clearTimer();\n    }\n    onDownButtonKeyUp() {\n        this.clearTimer();\n    }\n    onDownButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, -1);\n        }\n    }\n    onUserInput(event) {\n        if (this.readonly) {\n            return;\n        }\n        if (this.isSpecialChar) {\n            event.target.value = this.lastValue;\n        }\n        this.isSpecialChar = false;\n    }\n    onInputKeyDown(event) {\n        if (this.readonly) {\n            return;\n        }\n        this.lastValue = event.target.value;\n        if (event.shiftKey || event.altKey) {\n            this.isSpecialChar = true;\n            return;\n        }\n        let selectionStart = event.target.selectionStart;\n        let selectionEnd = event.target.selectionEnd;\n        let inputValue = event.target.value;\n        let newValueStr = null;\n        if (event.altKey) {\n            event.preventDefault();\n        }\n        switch (event.which) {\n            //up\n            case 38:\n                this.spin(event, 1);\n                event.preventDefault();\n                break;\n            //down\n            case 40:\n                this.spin(event, -1);\n                event.preventDefault();\n                break;\n            //left\n            case 37:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n                    event.preventDefault();\n                }\n                break;\n            //right\n            case 39:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\n                this.input.nativeElement.value = this.formatValue(newValueStr);\n                this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\n                this.updateModel(event, newValueStr);\n                break;\n            //backspace\n            case 8: {\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart - 1);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            }\n            // del\n            case 46:\n                event.preventDefault();\n                if (selectionStart === selectionEnd) {\n                    const deleteChar = inputValue.charAt(selectionStart);\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\n                    if (this.isNumeralChar(deleteChar)) {\n                        const decimalLength = this.getDecimalLength(inputValue);\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            if (decimalLength) {\n                                this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n                            }\n                            else {\n                                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                            }\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\n                            newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\n                        }\n                        else if (decimalCharIndexWithoutPrefix === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                        }\n                    }\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n                break;\n            default:\n                break;\n        }\n        this.onKeyDown.emit(event);\n    }\n    onInputKeyPress(event) {\n        if (this.readonly) {\n            return;\n        }\n        let code = event.which || event.keyCode;\n        let char = String.fromCharCode(code);\n        const isDecimalSign = this.isDecimalSign(char);\n        const isMinusSign = this.isMinusSign(char);\n        if (code != 13) {\n            event.preventDefault();\n        }\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\n            this.insert(event, char, { isDecimalSign, isMinusSign });\n        }\n    }\n    onPaste(event) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\n            if (data) {\n                let filteredData = this.parseValue(data);\n                if (filteredData != null) {\n                    this.insert(event, filteredData.toString());\n                }\n            }\n        }\n    }\n    allowMinusSign() {\n        return this.min == null || this.min < 0;\n    }\n    isMinusSign(char) {\n        if (this._minusSign.test(char) || char === '-') {\n            this._minusSign.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalSign(char) {\n        if (this._decimal.test(char)) {\n            this._decimal.lastIndex = 0;\n            return true;\n        }\n        return false;\n    }\n    isDecimalMode() {\n        return this.mode === 'decimal';\n    }\n    getDecimalCharIndexes(val) {\n        let decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\n        const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        return { decimalCharIndex, decimalCharIndexWithoutPrefix };\n    }\n    getCharIndexes(val) {\n        const decimalCharIndex = val.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const minusCharIndex = val.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        const suffixCharIndex = val.search(this._suffix);\n        this._suffix.lastIndex = 0;\n        const currencyCharIndex = val.search(this._currency);\n        this._currency.lastIndex = 0;\n        return { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex };\n    }\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\n        const minusCharIndexOnText = text.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n            return;\n        }\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let selectionEnd = this.input.nativeElement.selectionEnd;\n        let inputValue = this.input.nativeElement.value.trim();\n        const { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex } = this.getCharIndexes(inputValue);\n        let newValueStr;\n        if (sign.isMinusSign) {\n            if (selectionStart === 0) {\n                newValueStr = inputValue;\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n                }\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else if (sign.isDecimalSign) {\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n                this.updateValue(event, inputValue, text, 'insert');\n            }\n            else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n            else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else {\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n                    const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\n                    this.updateValue(event, newValueStr, text, operation);\n                }\n            }\n            else {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, operation);\n            }\n        }\n    }\n    insertText(value, text, start, end) {\n        let textSplit = text === '.' ? text : text.split('.');\n        if (textSplit.length === 2) {\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\n            this._decimal.lastIndex = 0;\n            return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n        }\n        else if (end - start === value.length) {\n            return this.formatValue(text);\n        }\n        else if (start === 0) {\n            return text + value.slice(end);\n        }\n        else if (end === value.length) {\n            return value.slice(0, start) + text;\n        }\n        else {\n            return value.slice(0, start) + text + value.slice(end);\n        }\n    }\n    deleteRange(value, start, end) {\n        let newValueStr;\n        if (end - start === value.length)\n            newValueStr = '';\n        else if (start === 0)\n            newValueStr = value.slice(end);\n        else if (end === value.length)\n            newValueStr = value.slice(0, start);\n        else\n            newValueStr = value.slice(0, start) + value.slice(end);\n        return newValueStr;\n    }\n    initCursor() {\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let inputValue = this.input.nativeElement.value;\n        let valueLength = inputValue.length;\n        let index = null;\n        // remove prefix\n        let prefixLength = (this.prefixChar || '').length;\n        inputValue = inputValue.replace(this._prefix, '');\n        selectionStart = selectionStart - prefixLength;\n        let char = inputValue.charAt(selectionStart);\n        if (this.isNumeralChar(char)) {\n            return selectionStart + prefixLength;\n        }\n        //left\n        let i = selectionStart - 1;\n        while (i >= 0) {\n            char = inputValue.charAt(i);\n            if (this.isNumeralChar(char)) {\n                index = i + prefixLength;\n                break;\n            }\n            else {\n                i--;\n            }\n        }\n        if (index !== null) {\n            this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n        }\n        else {\n            i = selectionStart;\n            while (i < valueLength) {\n                char = inputValue.charAt(i);\n                if (this.isNumeralChar(char)) {\n                    index = i + prefixLength;\n                    break;\n                }\n                else {\n                    i++;\n                }\n            }\n            if (index !== null) {\n                this.input.nativeElement.setSelectionRange(index, index);\n            }\n        }\n        return index || 0;\n    }\n    onInputClick() {\n        const currentValue = this.input.nativeElement.value;\n        if (!this.readonly && currentValue !== DomHandler.getSelection()) {\n            this.initCursor();\n        }\n    }\n    isNumeralChar(char) {\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n            this.resetRegex();\n            return true;\n        }\n        return false;\n    }\n    resetRegex() {\n        this._numeral.lastIndex = 0;\n        this._decimal.lastIndex = 0;\n        this._group.lastIndex = 0;\n        this._minusSign.lastIndex = 0;\n    }\n    updateValue(event, valueStr, insertedValueStr, operation) {\n        let currentValue = this.input.nativeElement.value;\n        let newValue = null;\n        if (valueStr != null) {\n            newValue = this.parseValue(valueStr);\n            newValue = !newValue && !this.allowEmpty ? 0 : newValue;\n            this.updateInput(newValue, insertedValueStr, operation, valueStr);\n            this.handleOnInput(event, currentValue, newValue);\n        }\n    }\n    handleOnInput(event, currentValue, newValue) {\n        if (this.isValueChanged(currentValue, newValue)) {\n            this.input.nativeElement.value = this.formatValue(newValue);\n            this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n            this.updateModel(event, newValue);\n            this.onInput.emit({ originalEvent: event, value: newValue, formattedValue: currentValue });\n        }\n    }\n    isValueChanged(currentValue, newValue) {\n        if (newValue === null && currentValue !== null) {\n            return true;\n        }\n        if (newValue != null) {\n            let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n            return newValue !== parsedCurrentValue;\n        }\n        return false;\n    }\n    validateValue(value) {\n        if (value === '-' || value == null) {\n            return null;\n        }\n        if (this.min != null && value < this.min) {\n            return this.min;\n        }\n        if (this.max != null && value > this.max) {\n            return this.max;\n        }\n        return value;\n    }\n    updateInput(value, insertedValueStr, operation, valueStr) {\n        insertedValueStr = insertedValueStr || '';\n        let inputValue = this.input.nativeElement.value;\n        let newValue = this.formatValue(value);\n        let currentLength = inputValue.length;\n        if (newValue !== valueStr) {\n            newValue = this.concatValues(newValue, valueStr);\n        }\n        if (currentLength === 0) {\n            this.input.nativeElement.value = newValue;\n            this.input.nativeElement.setSelectionRange(0, 0);\n            const index = this.initCursor();\n            const selectionEnd = index + insertedValueStr.length;\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n        }\n        else {\n            let selectionStart = this.input.nativeElement.selectionStart;\n            let selectionEnd = this.input.nativeElement.selectionEnd;\n            if (this.maxlength && this.maxlength < newValue.length) {\n                return;\n            }\n            this.input.nativeElement.value = newValue;\n            let newLength = newValue.length;\n            if (operation === 'range-insert') {\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n                const startValueStr = startValue !== null ? startValue.toString() : '';\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n                const sRegex = new RegExp(startExpr, 'g');\n                sRegex.test(newValue);\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n                const tRegex = new RegExp(tExpr, 'g');\n                tRegex.test(newValue.slice(sRegex.lastIndex));\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (newLength === currentLength) {\n                if (operation === 'insert' || operation === 'delete-back-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\n                else if (operation === 'delete-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\n                else if (operation === 'delete-range' || operation === 'spin')\n                    this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (operation === 'delete-back-single') {\n                let prevChar = inputValue.charAt(selectionEnd - 1);\n                let nextChar = inputValue.charAt(selectionEnd);\n                let diff = currentLength - newLength;\n                let isGroupChar = this._group.test(nextChar);\n                if (isGroupChar && diff === 1) {\n                    selectionEnd += 1;\n                }\n                else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n                    selectionEnd += -1 * diff + 1;\n                }\n                this._group.lastIndex = 0;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (inputValue === '-' && operation === 'insert') {\n                this.input.nativeElement.setSelectionRange(0, 0);\n                const index = this.initCursor();\n                const selectionEnd = index + insertedValueStr.length + 1;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else {\n                selectionEnd = selectionEnd + (newLength - currentLength);\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n        }\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n    concatValues(val1, val2) {\n        if (val1 && val2) {\n            let decimalCharIndex = val2.search(this._decimal);\n            this._decimal.lastIndex = 0;\n            if (this.suffixChar) {\n                return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\n            }\n            else {\n                return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\n            }\n        }\n        return val1;\n    }\n    getDecimalLength(value) {\n        if (value) {\n            const valueSplit = value.split(this._decimal);\n            if (valueSplit.length === 2) {\n                return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\n            }\n        }\n        return 0;\n    }\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n        this.focused = false;\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValue);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n        this.updateModel(event, newValue);\n        this.onBlur.emit(event);\n    }\n    formattedValue() {\n        const val = !this.value && !this.allowEmpty ? 0 : this.value;\n        return this.formatValue(val);\n    }\n    updateModel(event, value) {\n        if (this.value !== value) {\n            this.value = value;\n            this.onModelChange(value);\n        }\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get filled() {\n        return this.value != null && this.value.toString().length > 0;\n    }\n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n    getFormatter() {\n        return this.numberFormat;\n    }\n}\nInputNumber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumber, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nInputNumber.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: InputNumber, selector: \"p-inputNumber\", inputs: { showButtons: \"showButtons\", format: \"format\", buttonLayout: \"buttonLayout\", inputId: \"inputId\", styleClass: \"styleClass\", style: \"style\", placeholder: \"placeholder\", size: \"size\", maxlength: \"maxlength\", tabindex: \"tabindex\", title: \"title\", ariaLabel: \"ariaLabel\", ariaRequired: \"ariaRequired\", name: \"name\", required: \"required\", autocomplete: \"autocomplete\", min: \"min\", max: \"max\", incrementButtonClass: \"incrementButtonClass\", decrementButtonClass: \"decrementButtonClass\", incrementButtonIcon: \"incrementButtonIcon\", decrementButtonIcon: \"decrementButtonIcon\", readonly: \"readonly\", step: \"step\", allowEmpty: \"allowEmpty\", locale: \"locale\", localeMatcher: \"localeMatcher\", mode: \"mode\", currency: \"currency\", currencyDisplay: \"currencyDisplay\", useGrouping: \"useGrouping\", minFractionDigits: \"minFractionDigits\", maxFractionDigits: \"maxFractionDigits\", prefix: \"prefix\", suffix: \"suffix\", inputStyle: \"inputStyle\", inputStyleClass: \"inputStyleClass\", showClear: \"showClear\", disabled: \"disabled\" }, outputs: { onInput: \"onInput\", onFocus: \"onFocus\", onBlur: \"onBlur\", onKeyDown: \"onKeyDown\", onClear: \"onClear\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"focused\", \"class.p-inputnumber-clearable\": \"showClear && buttonLayout != \\\"vertical\\\"\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [INPUTNUMBER_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\"/>\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>            \n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n            <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n            <ng-container *ngIf=\"!decrementButtonIcon\">\n                <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n            </ng-container>\n        </button>\n        </span>\n    `, isInline: true, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.InputText; }), selector: \"[pInputText]\" }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.ButtonDirective; }), selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { kind: \"component\", type: i0.forwardRef(function () { return TimesIcon; }), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return AngleUpIcon; }), selector: \"AngleUpIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return AngleDownIcon; }), selector: \"AngleDownIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumber, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-inputNumber', template: `\n        <span\n            [ngClass]=\"{\n                'p-inputnumber p-component': true,\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n            }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n        >\n            <input\n                #input\n                [ngClass]=\"'p-inputnumber-input'\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                pInputText\n                [value]=\"formattedValue()\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.title]=\"title\"\n                [attr.id]=\"inputId\"\n                [attr.size]=\"size\"\n                [attr.name]=\"name\"\n                [attr.autocomplete]=\"autocomplete\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\"\n                [disabled]=\"disabled\"\n                [attr.required]=\"required\"\n                [attr.min]=\"min\"\n                [attr.max]=\"max\"\n                [readonly]=\"readonly\"\n                inputmode=\"decimal\"\n                (input)=\"onUserInput($event)\"\n                (keydown)=\"onInputKeyDown($event)\"\n                (keypress)=\"onInputKeyPress($event)\"\n                (paste)=\"onPaste($event)\"\n                (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n            />\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\"/>\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\n                </span>            \n            </ng-container>\n\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"incrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\n                    (mouseup)=\"onUpButtonMouseUp()\"\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\n                    (keydown)=\"onUpButtonKeyDown($event)\"\n                    (keyup)=\"onUpButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n                </button>\n                <button\n                    type=\"button\"\n                    pButton\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                    class=\"p-button-icon-only\"\n                    [class]=\"decrementButtonClass\"\n                    [disabled]=\"disabled\"\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\n                    (mouseup)=\"onDownButtonMouseUp()\"\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\n                    (keydown)=\"onDownButtonKeyDown($event)\"\n                    (keyup)=\"onDownButtonKeyUp()\"\n                    tabindex=\"-1\"\n                >\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!decrementButtonIcon\">\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            </span>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\n                [class]=\"incrementButtonClass\"\n                class=\"p-button-icon-only\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onUpButtonMouseDown($event)\"\n                (mouseup)=\"onUpButtonMouseUp()\"\n                (mouseleave)=\"onUpButtonMouseLeave()\"\n                (keydown)=\"onUpButtonKeyDown($event)\"\n                (keyup)=\"onUpButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\n                <ng-container *ngIf=\"!incrementButtonIcon\">\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\n                </ng-container>\n            </button>\n            <button\n                type=\"button\"\n                pButton\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\n                class=\"p-button-icon-only\"\n                [class]=\"decrementButtonClass\"\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\n                [disabled]=\"disabled\"\n                (mousedown)=\"onDownButtonMouseDown($event)\"\n                (mouseup)=\"onDownButtonMouseUp()\"\n                (mouseleave)=\"onDownButtonMouseLeave()\"\n                (keydown)=\"onDownButtonKeyDown($event)\"\n                (keyup)=\"onDownButtonKeyUp()\"\n                tabindex=\"-1\"\n            >\n            <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\n            <ng-container *ngIf=\"!decrementButtonIcon\">\n                <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\n                <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\n            </ng-container>\n        </button>\n        </span>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, providers: [INPUTNUMBER_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': 'focused',\n                        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\n                    }, styles: [\"p-inputnumber,.p-inputnumber{display:inline-flex}.p-inputnumber-button{display:flex;align-items:center;justify-content:center;flex:0 0 auto}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{order:3;border-top-left-radius:0;border-bottom-left-radius:0}.p-inputnumber-buttons-horizontal .p-inputnumber-input{order:2;border-radius:0}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{order:1;border-top-right-radius:0;border-bottom-right-radius:0}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{order:1;border-bottom-left-radius:0;border-bottom-right-radius:0;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{order:2;border-radius:0;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{order:3;border-top-left-radius:0;border-top-right-radius:0;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid p-inputnumber,.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}.p-inputnumber-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-inputnumber-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { showButtons: [{\n                type: Input\n            }], format: [{\n                type: Input\n            }], buttonLayout: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaRequired: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], incrementButtonClass: [{\n                type: Input\n            }], decrementButtonClass: [{\n                type: Input\n            }], incrementButtonIcon: [{\n                type: Input\n            }], decrementButtonIcon: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], allowEmpty: [{\n                type: Input\n            }], locale: [{\n                type: Input\n            }], localeMatcher: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], currency: [{\n                type: Input\n            }], currencyDisplay: [{\n                type: Input\n            }], useGrouping: [{\n                type: Input\n            }], minFractionDigits: [{\n                type: Input\n            }], maxFractionDigits: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], onInput: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], disabled: [{\n                type: Input\n            }] } });\nclass InputNumberModule {\n}\nInputNumberModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumberModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputNumberModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumberModule, declarations: [InputNumber], imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon], exports: [InputNumber, SharedModule] });\nInputNumberModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumberModule, imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: InputNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\n                    exports: [InputNumber, SharedModule],\n                    declarations: [InputNumber]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };\n//# sourceMappingURL=primeng-inputnumber.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}